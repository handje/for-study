//스터디 내용 정리 - 모든 내용은 아니고 리액트하면서 알면 좋을 내용만 요약

/*
대충 풀어쓴 용어정리

변수 : 데이터를 저장하는 이름 , a=1에서 a가 변수!
함수
    - 동작을 위한 코드
    - 입력(input)을 받아서 와라라 처리하고 결과(output)를 출력(return)
    - 함수는 선언하고 작성하고 ,  실행을 해야함 => 함수 이름 뒤에 ()괄호를 붙이면 실행
    - input이 필요한 함수면 괄호안에 변수를 적고 아니면 빈 괄호로 쓰면됩니당
구글링은 js붙이고 필요한 검색어 치면 많이 나옴
 */

//===================================================================================================================
//let,const : 변수 생성을 위한 키워드
var num1 = 1; //var은 모든지 가능해서 옛날 코드에만 사용! 쓰지마세요!!
let num2 = 2;
/*
let은 재선언은 안되고 재할당은 된다 => 무슨뜻??
let num2 : 선언함, num2=3 : 할당함
=> 
let num2=2 : 선언 및 초기화
num2=20 : 재할당은 가능
! 아예 숫자나 문자를 저장하는 변수일때는 사용 !
*/
const num3 = 3;
const NUM = 10; //상수
/*
const는 재선언,재할당 안된다
const num3=3 : 선언 및 초기화
num3=30 : 에러!

! 배열, 함수, 객체를 선언하거나 상수(정해두고 쓰는 값)에 사용 !
*/

//===================================================================================================================
//연산자 (결과를 예측해보고 확인해보세용)
//1. 할당연산자 : 값을 대입, 예시 외에도 모든 연산자를 합쳐서 쓸 수 있음
let x;

x = NUM; //NUM변수의 값을 x에 넣는다
console.log(x);

x += NUM; // x의 값에 NUM을 더해서 넣는다 , x=x+NUM
console.log(x);

x -= NUM; // x의 값에 NUM을 빼서 넣는다 , x=x-NUM
console.log(x);
console.log("=======================================================");

/* 2. 산술연산자 : 더하기 빼기 같은 연산 
+, -, *, / :더하기, 빼기, 곱하기, 나누기
% : 나머지 , 12%5 -> 2
++ , -- : 1증가,감소 -> x++, x--
** :제곱 , 2**3 -> 8
*/

//3. 비교연산자 : 같은지 다른지 큰지 작은지 등등
console.log(1 == "1");
console.log(1 === "1");
console.log("==");
console.log(2 !== 2); //!는 부정의 의미, true->false / false->true
console.log(2 !== 3);
console.log("==");
console.log(2 >= 2);
console.log(2 > 2);
console.log("==");
console.log(2 <= 2);
console.log(2 < 2);
console.log("=======================================================");

/*4. 논리 연산자
&& : and
|| : or
! : not
*/
console.log(true && true);
console.log(true && false);
console.log(false && true);
console.log(false && false);
console.log("==");
console.log(true || true);
console.log(true || false);
console.log(false || true);
console.log(false || false);
console.log("=======================================================");

//5. 조건연산자 (삼항연산자) : 조건?참일때 코드:거짓일때 코드
let res;
NUM > 0 ? (res = "양수") : (res = "음수");
console.log(res);
console.log("=======================================================");

//===================================================================================================================
// array(배열)
const arr = [];
console.log(arr);

arr.push(0);
console.log(arr);

arr.push(...[1, 2, 3]); //구조분해할당: 객체나 배열의 내부 값만 넣는것 = 겉을 없애는 효과!
console.log(arr);

arr.pop();
console.log(arr);
console.log(arr.pop()); //이 코드 자체가 없애는 값을 출력해줘서 이렇게 바로 출력해서 사용해도됨
console.log("==");

console.log(arr.length); //배열안에 몇개가 들어있는지 알려주는 내장함수
const [a, b, c] = [1, 2, 3]; //배열값을 하나씩 변수에 대입함
console.log(a, b, c);
console.log("=======================================================");
//===================================================================================================================
// object(객체)
const obj = {};
console.log(obj);

obj.name = "jieun"; //객체에 key:name, value:"jieun"을 추가하는 코드
obj.age = 26;
console.log(obj);
console.log(obj.name); // key가 name인 값을 출력
console.log("=======================================================");
//===================================================================================================================
// for문 : for(시작값:범위:몇씩증가할지)
for (let i = 0; i < 2; i++) {
  console.log(`반복${i}`);
}
console.log("==");

//배열 반복문
const arr2 = ["one", "two", "three"];
//방법1
for (let i = 0; i < arr2.length; i++) {
  console.log(arr2[i]);
}
console.log("==");
//방법2
for (let i of arr2) {
  console.log(i);
}
console.log("==");

//객체 반복문
const obj2 = { name: "son", age: 26 };
for (let i in obj2) {
  console.log(`key:${i}-value:${obj2[i]}`);
}
console.log("=======================================================");
//===================================================================================================================
/*if문
if(조건1){
    조건1이 참일때
}else if(조건2){
    조건2가 참일때
}else{
    조건1,2가 다 아닐때
}
*/
//===================================================================================================================
// map, filter : 배열의 요소를 풀어서 조작하거나 조건에 맞는 배열의 요소만 뽑고싶을때 사용하는 내장함수, 뭔지만 알고 넘어가고 나중에 공부합시당
